
func_time_diff() {

    start_time=$1
    end_time=$2
    start_s=${start_time%.*}
    start_nanos=${start_time#*.}
    end_s=${end_time%.*}
    end_nanos=${end_time#*.}

    if [ "$end_nanos" -lt "$start_nanos" ];then
        end_s=$(( 10#$end_s - 1 ))
        end_nanos=$(( 10#$end_nanos + 10**9 ))
    fi

    time=$(( 10#$end_s - 10#$start_s )).$(( (10#$end_nanos - 10#$start_nanos)/10**6 ))
}

func_parse_sql()
{
        grep -iE '==>|<==' timeout.tmp | awk -F [ '{print $3}' >> traceId.tmp;
        sed "s/^/traceId:[/g"  traceId.tmp;
        echo traceId.tmp;

}

func_cal_sql_percent()
{
        echo -e "\n";
        echo "=================================== statistics info ===================================";
        begin_time=$(grep -i "$traceId" timeout.tmp| head -1 | awk -F [ '{print $1}');
        ends_time=$(grep -i "$traceId" timeout.tmp| tail -1 | awk -F [ '{print $1}');

        func_time_diff $(date +"%s.%N" -d "$begin_time") $(date +"%s.%N" -d "$ends_time");
        time_cost=$(echo  "scale=3; $time/10"|bc| awk '{printf "%.2f", $0}');

        echo "begin_time                   | "$begin_time;
        echo "end_time                     | "$ends_time;
        echo "all cost                     | "$time_cost"s";

        sql_begin_time=$(grep -i "$traceId" timeout.tmp| grep  '==>'|head -1 | awk -F [ '{print $1}');
        sql_end_time=$(grep -i "$traceId" timeout.tmp| grep  '<==' | tail -1 |awk -F [ '{print $1}');

        func_time_diff  $(date +"%s.%N" -d "$sql_begin_time") $(date +"%s.%N" -d "$sql_end_time");
        sql_time_cost=$(echo  "scale=3; $time/10"|bc| awk '{printf "%.2f", $0}');

        echo "sql_begin_time               | "$sql_begin_time;
        echo "sql_end_time                 | "$sql_end_time ;
        echo "sql cost                     | "$sql_time_cost"s";

        echo "sql percent :                |  " $(echo "$sql_time_cost * 100 / $time_cost"|bc )% ;

        echo -e "\n";
}

func_handle_param()
{
       read -p "please input traceId :" traceId
       func_cal_sql_percent;
       echo "====================================trace info ============================================";
       grep -i "$traceId" timeout.tmp
}

func_trap()
{
        func_parse_sql;
        func_handle_param;
        rm timeout.tmp;
        rm traceId.tmp;
        sh convertLogLevel.sh &>/dev/null;
        echo -e "\n";
        echo '=================================== monitor end ===================================';
        exit
}


trap "func_trap" 2
echo "=================================== monitor start ; Trigger events you care about ===================================";
./convertLogLevel.sh DEBUG &>/dev/null
tail -f $(find ../ -name server.log) >> timeout.tmp
