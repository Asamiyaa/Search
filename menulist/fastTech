常见性能优化策略
   参考与细节:
		1.具体的思考过程 取舍过程   参考:美团tech: https://tech.meituan.com/2016/12/02/performance-tunning.html
		2.结合 搜索.xmind 文档

		1.背景
				1.通用的常见思路以及方案选型的考虑点，帮助大家培养在方案选型时的意识、思维以及做各种权衡的能力
		2.维度
				1.代码
						1.缓存
								选型考虑
									如果数据量小，并且不会频繁地增长又清空（这会导致频繁地垃圾回收），那么可以选择本地缓存。具体的话，如果需要一些策略的支持（比如缓存满的逐出策略），可以考虑Ehcache；如不需要，可以考虑HashMap；如需要考虑多线程并发的场景，可以考虑ConcurentHashMap。
									其他情况，可以考虑缓存服务。目前从资源的投入度、可运维性、是否能动态扩容以及配套设施来考虑，我们优先考虑Tair。除非目前Tair还不能支持的场合（比如分布式锁、Hash类型的value），我们考虑用Redis。
						2.异步
								1.多线程
								2.mq
								..

						3.数据结构和算法
								1.java容器选择 
								2.
								
						3.jvm

						比如:for循环次数过多、作了很多无谓的条件判断、相同逻辑重复多次
				2.sql
						0.自带的慢查询日志或者开源的慢查询系统定位到具体的出问题的SQL，然后使用explain、profile等工具来逐步调优
						1.写法-是否使用索引
						2.

				3.池
						1.结合当前使用连接池的原理、具体的连接池监控数据和当前的业务量作一个综合的判断，通过反复的几次调试得到最终的调优参数。
				4.db
						1.索引
						2.
				5.搜索
						1.全文索引 / 空间索引
				6.io
						1.多路复用nio
						2.传输 - 压缩 / 批处理
				7.网络
						1.netty


				8.架构
						1.读写分离
						2.多从库负载均衡
						3.水平和垂直分库分表
						4.cdn
				9.前端

				
